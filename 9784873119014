[
    {
        "title": "対象読者とカバー範囲",
        "comment": "＜本eBookはこのような方におすすめです＞\r\nDevOpsに既に取り組んでおり、さらなる効率化を目指している\r\nDevOpsについて学びたい、DevOpsを実現する上で重要なポイントを学びたい\r\n\r\n＜本eBookでカバーする内容＞\r\nサービス品質目標（SLO）とリリース期間短縮のバランスの取り方\r\n公正かつ効果的なオンコールポリシーの作り方\r\n効率的かつ効果的なインシデント対応のあり方\r\nマイクロサービスの複雑性の克服\r\nデータを活用した開発スピードの向上\r\n\r\n出典:\r\nhttps://newrelic.com/jp/resource/devops-best-practices-jp?utm_campaign=FY21-Q3-DEV-DO-JP-GOOG-PS-TXT-DODR&utm_medium=PS&utm_source=GOOG&utm_content=DODR&fiscal_year=FY21&quarter=Q3&gtm=DEV&program=DO&ad_type=TXT&geo=J",
        "good": 0
    },
    {
        "title": "オーケストレーションツールとは？",
        "comment": "Dockerコンテナが本番環境に浸透し始めると、そのコンテナの運用管理をしなくてはならなくなります。\r\n\r\n例えばコンテナ化したアプリケーションを何台ものサーバーへ展開するのは手間になり、複数のサーバーへ展開したコンテナがちゃんと稼働しているかどうかを監視することも必要になります。さらに万が一、いずれかのコンテナが落ちたときに別のコンテナを起動するクラスター管理、アプリケーションへの負荷が高まったらサーバーを増やし、負荷が減ればサーバーを減らすスケーラブルな運用対応や複数コンテナへのアクセスの分配など、さまざまな処理が必要となってきます。\r\n\r\nこうした多数のコンテナに対する運用管理作業を一般に“コンテナオーケストレーション”と呼びます。そしてKubernetesをはじめとするコンテナオーケストレーションツールは、こうした作業を自動化してくれるのです。正確な表現ではありませんが、コンテナを基盤とした分散環境を実現するOSのような位置づけと言ってもいいでしょう。\r\n\r\n\r\n引用：多数のコンテナの運用管理を担うのがオーケストレーションツール\r\nhttps://cn.teldevice.co.jp/column/10519/\r\n",
        "good": 0
    },
    {
        "title": "おーケストレーションツールとは？",
        "comment": "Dockerコンテナが本番環境に浸透し始めると、そのコンテナの運用管理をしなくてはならなくなります。\r\n\r\n例えばコンテナ化したアプリケーションを何台ものサーバーへ展開するのは手間になり、複数のサーバーへ展開したコンテナがちゃんと稼働しているかどうかを監視することも必要になります。さらに万が一、いずれかのコンテナが落ちたときに別のコンテナを起動するクラスター管理、アプリケーションへの負荷が高まったらサーバーを増やし、負荷が減ればサーバーを減らすスケーラブルな運用対応や複数コンテナへのアクセスの分配など、さまざまな処理が必要となってきます。\r\n\r\nこうした多数のコンテナに対する運用管理作業を一般に“コンテナオーケストレーション”と呼びます。そしてKubernetesをはじめとするコンテナオーケストレーションツールは、こうした作業を自動化してくれるのです。正確な表現ではありませんが、コンテナを基盤とした分散環境を実現するOSのような位置づけと言ってもいいでしょう。\r\n\r\n\r\n引用：多数のコンテナの運用管理を担うのがオーケストレーションツール\r\nhttps://cn.teldevice.co.jp/column/10519/\r\n",
        "good": 0
    },
    {
        "title": "おーケストレーションツールとは？",
        "comment": "Dockerコンテナが本番環境に浸透し始めると、そのコンテナの運用管理をしなくてはならなくなります。\r\n\r\n例えばコンテナ化したアプリケーションを何台ものサーバーへ展開するのは手間になり、複数のサーバーへ展開したコンテナがちゃんと稼働しているかどうかを監視することも必要になります。さらに万が一、いずれかのコンテナが落ちたときに別のコンテナを起動するクラスター管理、アプリケーションへの負荷が高まったらサーバーを増やし、負荷が減ればサーバーを減らすスケーラブルな運用対応や複数コンテナへのアクセスの分配など、さまざまな処理が必要となってきます。\r\n\r\nこうした多数のコンテナに対する運用管理作業を一般に“コンテナオーケストレーション”と呼びます。そしてKubernetesをはじめとするコンテナオーケストレーションツールは、こうした作業を自動化してくれるのです。正確な表現ではありませんが、コンテナを基盤とした分散環境を実現するOSのような位置づけと言ってもいいでしょう。\r\n\r\n\r\n引用：多数のコンテナの運用管理を担うのがオーケストレーションツール\r\nhttps://cn.teldevice.co.jp/column/10519/\r\n",
        "good": 0
    },
    {
        "title": "そもそもDockerコンテナとは？",
        "comment": "Dockerコンテナとは簡略化すると仮想環境と同じ役割を担うもの。\r\nOSという名のコンテナにソースファイルやらビルドファイルやらを全て詰め込む仕様であるため、以下のメリットがある。\r\n・開発環境と本番環境の移行がスムーズである\r\n・壊れたら正常であったコンテナを輸出するだけなので、バックアップが万全\r\n・環境が汚れない（汚れたら壊すだけなので）",
        "good": 0
    },
    {
        "title": "そもそもDockerコンテナとは？",
        "comment": "Dockerコンテナとは簡略化すると仮想環境と同じ役割を担うもの。\r\nOSという名のコンテナにソースファイルやらビルドファイルやらを全て詰め込む仕様であるため、以下のメリットがある。\r\n・開発環境と本番環境の移行がスムーズである\r\n・壊れたら正常であったコンテナを輸出するだけなので、バックアップが万全\r\n・環境が汚れない（汚れたら壊すだけなので）",
        "good": 0
    }
]